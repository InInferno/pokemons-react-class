{"version":3,"sources":["components/Header/Header.js","store/actions/actionsTypes.js","store/actions/actions.js","utils/errorHandler.js","store/actions/pokemons.js","components/Pokemons/Pokemons.js","components/Pokemon/Pokemon.js","components/Navigation/Navigation.js","App.js","reportWebVitals.js","store/initialState.js","store/store.js","store/reducers/pokemonsData.js","index.js"],"names":["Header","className","to","Component","connect","POKEMONS_FETCH_DATA_SUCCESS","POKEMON_FETCH_DATA_SUCCESS","POKEMONS_LIST_FETCH_DATA_SUCCESS","LIST_IS_OPEN_SUCCESS","FETCH_IS_START","FETCH_ERROR","pokemonsDataSuccess","pokemons","type","pokemonDataSuccess","pokemon","pokemonsListDataSuccess","pokemonsList","isFetchStart","boolean","isFetchError","error","errorHandler","errorNum","pokemonFetchData","url","dispatch","fetch","then","res","status","Error","json","console","log","finally","catch","err","message","pokemonsListFetchData","listOpen","Pokemons","getPokemon","event","preventDefault","searchInput","value","props","fetchDataPokemon","getNextPokemons","fetchData","next","getPreviousPokemons","previous","getNextPokemonsList","fetchDataPokemonsList","getPreviousPokemonsList","pokemonsListIsOpen","listIsOpenBoolean","listIsOpen","this","onSubmit","ref","input","id","name","toUpperCase","substring","src","alt","onClick","results","sort","a","b","map","index","match","state","pokemonsFetchData","Pokemon","params","prevId","height","weight","types","abilities","ability","withRouter","Navigation","App","basename","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","store","createStore","action","composeWithDevTools","applyMiddleware","thunk","subscribe","info","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.77c35121.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport './Header.css';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"header\">\r\n        <Link className=\"header__logo\" to={`/`}></Link>\r\n        <h1 className='header__title'>Pokemons</h1>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect()(Header);\r\n","export const POKEMONS_FETCH_DATA_SUCCESS = \"POKEMONS_FETCH_DATA_SUCCESS\";\r\nexport const POKEMON_FETCH_DATA_SUCCESS = \"POKEMON_FETCH_DATA_SUCCESS\";\r\nexport const POKEMONS_LIST_FETCH_DATA_SUCCESS = \"POKEMONS_LIST_FETCH_DATA_SUCCESS\";\r\nexport const LIST_IS_OPEN_SUCCESS = \"LIST_IS_OPEN_SUCCESS\";\r\nexport const FETCH_IS_START = \"FETCH_IS_START\";\r\nexport const FETCH_ERROR = \"FETCH_ERROR\";\r\n","import {\r\n    POKEMONS_FETCH_DATA_SUCCESS,\r\n    POKEMON_FETCH_DATA_SUCCESS,\r\n    POKEMONS_LIST_FETCH_DATA_SUCCESS,\r\n    LIST_IS_OPEN_SUCCESS,\r\n    FETCH_IS_START,\r\n    FETCH_ERROR\r\n} from './actionsTypes'\r\n\r\nexport function pokemonsDataSuccess(pokemons) {\r\n    return {\r\n        type: POKEMONS_FETCH_DATA_SUCCESS,\r\n        pokemons: pokemons\r\n    };\r\n}\r\n\r\nexport function pokemonDataSuccess(pokemon) {\r\n    return {\r\n        type: POKEMON_FETCH_DATA_SUCCESS,\r\n        pokemon: pokemon\r\n    };\r\n}\r\n\r\nexport function pokemonsListDataSuccess(pokemonsList) {\r\n    return {\r\n        type: POKEMONS_LIST_FETCH_DATA_SUCCESS,\r\n        pokemonsList: pokemonsList\r\n    };\r\n}\r\n\r\nexport function listOpenSuccess() {\r\n    return {\r\n        type: LIST_IS_OPEN_SUCCESS\r\n    };\r\n}\r\n\r\nexport function isFetchStart(boolean) {\r\n    return { \r\n        type: FETCH_IS_START,\r\n        isFetchStart: boolean\r\n    };\r\n}\r\n\r\nexport function isFetchError(error) {\r\n    return { \r\n        type: FETCH_ERROR,\r\n        isFetchError: error\r\n    };\r\n}\r\n","export default function errorHandler(errorNum) {\r\n    switch (errorNum) {\r\n        case '400':\r\n            return `Необходимо ввести название покемона`;\r\n        case '401':\r\n            return `Неверный токен`;\r\n        case '404':\r\n            return `Покемон не найден`;\r\n        case 'Failed to fetch':\r\n            return `Ошибка запроса`;\r\n        default:\r\n            return `Неизвестная ошибка`;\r\n      }\r\n}\r\n","import { \r\n    pokemonsDataSuccess,\r\n    pokemonDataSuccess,\r\n    pokemonsListDataSuccess,\r\n    listOpenSuccess,\r\n    isFetchStart,\r\n    isFetchError\r\n} from './actions'\r\nimport errorHandler from '../../utils/errorHandler'\r\n\r\nexport function pokemonsFetchData(url) { \r\n    return (dispatch) => {\r\n        dispatch(isFetchStart(true))\r\n        dispatch(isFetchError(null))\r\n        dispatch(pokemonsDataSuccess(null))\r\n        dispatch(pokemonDataSuccess(null))\r\n        fetch(url)\r\n            .then(res => {\r\n                dispatch(pokemonsDataSuccess(null))\r\n                if (res.status !== 200) {\r\n                    throw new Error(res.status)\r\n                }\r\n                return res.json()\r\n            })\r\n            .then(pokemons => {\r\n                console.log('action pokemons.js', pokemons)\r\n                dispatch(pokemonsDataSuccess(pokemons))\r\n            })\r\n            .finally(pokemons => {\r\n                dispatch(isFetchStart(false))\r\n            })\r\n            .catch((err) => {\r\n                dispatch(isFetchError(errorHandler(err.message)))\r\n            });\r\n    }\r\n}\r\n\r\nexport function pokemonFetchData(url) { \r\n    return (dispatch) => {\r\n        dispatch(isFetchStart(true))\r\n        dispatch(isFetchError(null))\r\n        dispatch(pokemonDataSuccess(null))\r\n        fetch(url)\r\n            .then(res => {\r\n                if (res.status !== 200) {\r\n                    throw new Error(res.status)\r\n                }\r\n                return res.json()\r\n            })\r\n            .then(pokemon => {\r\n                console.log('action pokemonFetchData pokemon.js', pokemon)\r\n                dispatch(pokemonDataSuccess(pokemon))\r\n            })\r\n            .finally(pokemon => {\r\n                dispatch(isFetchStart(false))\r\n            })\r\n            .catch((err) => {\r\n                dispatch(isFetchError(errorHandler(err.message)))\r\n            });\r\n    }\r\n}\r\n\r\nexport function pokemonsListFetchData(url) { \r\n    return (dispatch) => {\r\n        dispatch(isFetchStart(true))\r\n        dispatch(isFetchError(null))\r\n        fetch(url)\r\n            .then(res => {\r\n                dispatch(pokemonsListDataSuccess(null))\r\n                if (res.status !== 200) {\r\n                    throw new Error(res.status)\r\n                }\r\n                return res.json()\r\n            })\r\n            .then(pokemons => {\r\n                console.log('action pokemonsListFetchData pokemons.js', pokemons)\r\n                console.log(typeof(pokemons))\r\n                dispatch(pokemonsListDataSuccess(pokemons))\r\n            })\r\n            .finally(pokemons => {\r\n                dispatch(isFetchStart(false))\r\n            })\r\n            .catch((err) => {\r\n                dispatch(isFetchError(errorHandler(err.message)))\r\n            });\r\n    }\r\n}\r\n\r\nexport function listOpen() {\r\n    return (dispatch) => {\r\n        dispatch(listOpenSuccess())\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './Pokemons.css';\r\nimport { connect } from \"react-redux\";\r\nimport { \r\n  pokemonsFetchData, \r\n  pokemonFetchData, \r\n  pokemonsListFetchData,\r\n  listOpen\r\n } from '../../store/actions/pokemons';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass Pokemons extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.fetchData(`https://pokeapi.co/api/v2/pokemon`);\r\n    this.props.fetchDataPokemonsList(`https://pokeapi.co/api/v2/pokemon?limit=50&offset=0`);\r\n  }\r\n\r\n  getPokemon = (event) => {\r\n    event.preventDefault();\r\n    if (this.searchInput.value !== '') {\r\n      this.props.fetchDataPokemon(`https://pokeapi.co/api/v2/pokemon/${this.searchInput.value}`);\r\n    }\r\n  }\r\n\r\n  getNextPokemons = (event) => {\r\n    event.preventDefault();\r\n    this.props.fetchData(`${this.props.pokemons.next}`);\r\n  }\r\n  \r\n  getPreviousPokemons = (event) => {\r\n    event.preventDefault();\r\n    this.props.fetchData(`${this.props.pokemons.previous}`);\r\n  }\r\n\r\n  getNextPokemonsList = (event) => {\r\n    event.preventDefault();\r\n    this.props.fetchDataPokemonsList(`${this.props.pokemonsList.next}`);\r\n  }\r\n  \r\n  getPreviousPokemonsList = (event) => {\r\n    event.preventDefault();\r\n    this.props.fetchDataPokemonsList(`${this.props.pokemonsList.previous}`);\r\n  }\r\n\r\n  pokemonsListIsOpen = () => {\r\n    console.log(typeof(this.props.listIsOpenBoolean))\r\n    this.props.listIsOpen();\r\n  }\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <div className='page'>\r\n\r\n        {/*Форма поиска  */}\r\n        <form className='search-form' onSubmit={ this.getPokemon }>\r\n          <label className='search-title'>\r\n            Введите название покемона:\r\n          </label>\r\n          <div className='search-field'>\r\n            <input className='search-input' type=\"text\" ref={(input) => {this.searchInput = input}} />\r\n            {/* <button className='search-button' type=\"submit\">Найти</button> */}\r\n            <button className=\"search-button\" type=\"submit\">\r\n              <div className=\"search-button__image\"></div>\r\n            </button>\r\n          </div>\r\n        </form>\r\n\r\n        {/* Прелоадер */}\r\n        {(this.props.isFetchStart) &&\r\n          <div className='preloader'></div>\r\n        }\r\n        \r\n        {/* Блок ошибки */}\r\n        {(this.props.isFetchError) &&\r\n          <h2 className='error-block'>{this.props.isFetchError}</h2>\r\n        }  \r\n\r\n\r\n        {/* Карточка покемона при поиске */}\r\n        {this.props.pokemon &&\r\n          <Link className=\"pokemons-list__link\" to={`/pokemon/${this.props.pokemon.id}`}>\r\n            <div className='pokemon-card pokemon-card_single-search'>\r\n              <p className='pokemon-card__name'>\r\n                {this.props.pokemon.name[0].toUpperCase() + this.props.pokemon.name.substring(1)}\r\n              </p>\r\n              <div className=\"pokemon-card__images\">\r\n                <img \r\n                  className=\"pokemon-card__image\"\r\n                  src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${this.props.pokemon.id}.png`}\r\n                  alt='pokemon'/>\r\n              </div>\r\n            </div>\r\n          </Link>\r\n        }\r\n\r\n\r\n        {this.props.pokemons &&\r\n        <div className=\"container\">\r\n\r\n          {/* Выпадающий список покемонов */}\r\n          <div className=\"pokemons-list-container\">\r\n            <div className=\"icon-list\">\r\n              <p className=\"icon-list__text\">Список покемонов</p>\r\n              <div className={`icon-list__img_${this.props.listIsOpenBoolean}`} onClick={this.pokemonsListIsOpen}></div>\r\n            </div>\r\n            {(this.props.listIsOpenBoolean && this.props.pokemonsList) &&\r\n              <div className='pokemons-list'>\r\n                <ul className=\"pokemons-list__container\">\r\n                  {this.props.pokemonsList.results.sort((a, b) => {\r\n                    if(a.name < b.name) { return -1; }\r\n                    if(a.name > b.name) { return 1; }\r\n                    return 0;\r\n                  }).map((pokemon, index) => {  \r\n                    return <Link className=\"pokemons-list__link\" key={index} to={`/pokemon/${pokemon.url.match(/\\d+(?=\\D*$)/)}`}>\r\n                      <li className=\"pokemons-list__card\" key={index}>\r\n                        <p className='pokemons-list__name'>\r\n                        {pokemon.name}\r\n                        </p>\r\n                      </li>\r\n                    </Link>})\r\n                  }\r\n                </ul>\r\n\r\n                <div className=\"pokemons-list-container__buttons\">\r\n                  {this.props.pokemonsList.previous && \r\n                    <button className=\"pokemons-list-container__button_previous\" onClick={ this.getPreviousPokemonsList }>Предыдущие</button>\r\n                  }            \r\n                  {(this.props.pokemonsList.next) && \r\n                    <button className=\"pokemons-list-container__button_next\" onClick={ this.getNextPokemonsList }>Следующие</button>\r\n                  }\r\n                </div>\r\n\r\n              </div>         \r\n            }\r\n          </div>\r\n\r\n\r\n\r\n            {/* Покемоны на главной странице */}\r\n          <div className=\"pokemons-container\">\r\n            <ul className=\"pokemons-card-container\">\r\n              {this.props.pokemons.results.map((pokemon, index)=> {\r\n                return <Link className=\"pokemon-card__link\" key={index} to={`/pokemon/${pokemon.url.match(/\\d+(?=\\D*$)/)}`}>\r\n                <li className=\"pokemon-card\" key={index}>\r\n                          <p className='pokemon-card__name'>\r\n                            {pokemon.name[0].toUpperCase() + pokemon.name.substring(1)}\r\n                          </p>\r\n                          <div className=\"pokemon-card__images\">\r\n                            <img \r\n                            className=\"pokemon-card__image\" \r\n                            src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${pokemon.url.match(/\\d+(?=\\D*$)/)}.png`} \r\n                            alt='pokemon'/>\r\n                          </div>\r\n                        </li>\r\n                  </Link>\r\n                })\r\n              }\r\n            </ul>\r\n            <div className=\"pokemons-container__buttons\">\r\n              {this.props.pokemons.previous && \r\n                <button className=\"pokemons-container__button_previous\" onClick={ this.getPreviousPokemons }>&lt;</button>\r\n              }           \r\n              {(this.props.pokemons.next) && \r\n                <button className=\"pokemons-container__button_next\" onClick={ this.getNextPokemons }>&gt;</button>\r\n              }\r\n            </div>\r\n\r\n          </div>\r\n        </div> \r\n        }\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => state;\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchData: url => dispatch(pokemonsFetchData(url)),\r\n    fetchDataPokemon: url => dispatch(pokemonFetchData(url)),\r\n    fetchDataPokemonsList: url => dispatch(pokemonsListFetchData(url)),\r\n    listIsOpen: () => dispatch(listOpen())\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Pokemons);\r\n","import React, { Component } from 'react';\r\nimport { \r\n  pokemonFetchData,\r\n  pokemonsListFetchData,\r\n  listOpen\r\n} from '../../store/actions/pokemons';\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter, Link } from 'react-router-dom'\r\nimport './Pokemon.css'\r\n\r\nclass Pokemon extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.fetchDataPokemon(`https://pokeapi.co/api/v2/pokemon/${this.props.match.params.id}`);\r\n    this.props.fetchDataPokemonsList(`https://pokeapi.co/api/v2/pokemon?limit=50&offset=0`);\r\n  }\r\n\r\n  pokemonsListIsOpen = () => {\r\n    console.log(typeof(this.props.listIsOpenBoolean))\r\n    this.props.listIsOpen();\r\n  }\r\n\r\n  getNextPokemonsList = (event) => {\r\n    event.preventDefault();\r\n    this.props.fetchDataPokemonsList(`${this.props.pokemonsList.next}`);\r\n  }\r\n  \r\n  getPreviousPokemonsList = (event) => {\r\n    event.preventDefault();\r\n    this.props.fetchDataPokemonsList(`${this.props.pokemonsList.previous}`);\r\n  }\r\n\r\n  componentDidUpdate(prevId) {\r\n    if (this.props.match.params.id !== prevId.match.params.id) {\r\n      this.props.fetchDataPokemon(`https://pokeapi.co/api/v2/pokemon/${this.props.match.params.id}`);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n\r\n\r\n      <div className=\"container-single\">\r\n\r\n        {/* Выпадающий список покемонов */}\r\n        <div className=\"pokemons-list-container\">\r\n            <div className=\"icon-list\">\r\n              <p className=\"icon-list__text\">Список покемонов</p>\r\n              <div className={`icon-list__img_${this.props.listIsOpenBoolean}`} onClick={this.pokemonsListIsOpen}></div>\r\n            </div>\r\n            {(this.props.listIsOpenBoolean && this.props.pokemonsList) &&\r\n              <div className='pokemons-list'>\r\n                <ul className=\"pokemons-list__container\">\r\n                  {this.props.pokemonsList.results.sort((a, b) => {\r\n                    if(a.name < b.name) { return -1; }\r\n                    if(a.name > b.name) { return 1; }\r\n                    return 0;\r\n                  }).map((pokemon, index) => {\r\n                    return <Link \r\n                    className=\"pokemons-list__link\" \r\n                    key={index} \r\n                    to={`/pokemon/${pokemon.url.match(/\\d+(?=\\D*$)/)}`}\r\n                    >\r\n                      <li className=\"pokemons-list__card\" key={index}>\r\n                        <p className='pokemons-list__name'>\r\n                        {pokemon.name}\r\n                        </p>\r\n                      </li>\r\n                    </Link>})\r\n                  }\r\n                </ul>\r\n\r\n                <div className=\"pokemons-list-container__buttons\">\r\n                  {this.props.pokemonsList.previous && \r\n                    <button className=\"pokemons-list-container__button_previous\" onClick={ this.getPreviousPokemonsList }>Предыдущие</button>\r\n                  }            \r\n                  {(this.props.pokemonsList.next) && \r\n                    <button className=\"pokemons-list-container__button_next\" onClick={ this.getNextPokemonsList }>Следующие</button>\r\n                  }\r\n                </div>\r\n\r\n              </div>         \r\n            }\r\n          </div>\r\n        \r\n\r\n        {/* Подробная карточка покемона */}\r\n        {this.props.pokemon &&\r\n          <div className=\"single-card\">\r\n\r\n            <div className=\"single-card__container\">\r\n              <p className=\"single-card__name\">{this.props.pokemon.name[0].toUpperCase() + this.props.pokemon.name.substring(1)}</p>\r\n              <img \r\n              className=\"single-card__image\"\r\n              src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${this.props.pokemon.id}.png`} \r\n              alt=\"pokemon\" />\r\n            </div>\r\n\r\n            <div className=\"single-card__container\">\r\n            <p className=\"single-card__text\">Рост:</p>\r\n            <p className=\"single-card__text-item\">{this.props.pokemon.height * 10} сантиметров</p>\r\n            <p className=\"single-card__text\">Вес:</p>\r\n            <p className=\"single-card__text-item\">{this.props.pokemon.weight / 10} килограмм</p>\r\n            \r\n            <p className=\"single-card__text\">Тип:</p>\r\n            <ul className=\"single-card__list\">\r\n              {this.props.pokemon.types.map((type, index)=> {\r\n                return<li \r\n                  key={index}\r\n                  className=\"single-card__list-item\"\r\n                  >\r\n                    <p className=\"single-card__list-text\">{type.type.name}</p>\r\n                </li>\r\n                })\r\n              }\r\n            </ul>\r\n\r\n            <p className=\"single-card__text\">Способности:</p>\r\n            <ul className=\"single-card__list\">\r\n              {this.props.pokemon.abilities.map((ability, index)=> {\r\n                return<li \r\n                  key={index}\r\n                  className=\"single-card__list-item\"\r\n                  >\r\n                    <p className=\"single-card__list-text\">{ability.ability.name}</p>\r\n                </li>\r\n                })\r\n              }\r\n            </ul>\r\n            </div>\r\n          </div> \r\n        }\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => state;\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchDataPokemon: url => dispatch(pokemonFetchData(url)),\r\n    fetchDataPokemonsList: url => dispatch(pokemonsListFetchData(url)),\r\n    listIsOpen: () => dispatch(listOpen())\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Pokemon));\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navigation.css';\r\n\r\nclass Navigation extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"nav-container\">\r\n        <Link className=\"nav-container__link\" to={`/`}>На главную</Link>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport Header from './components/Header/Header'\r\nimport Pokemons from './components/Pokemons/Pokemons'\r\nimport Pokemon from './components/Pokemon/Pokemon'\r\nimport Navigation from './components/Navigation/Navigation'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <BrowserRouter basename=\"/pokemons-react-class\">\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Pokemons />\r\n          </Route>\r\n          <Route exact path=\"/pokemon/:id\">\r\n            <Navigation />\r\n            <Pokemon />\r\n          </Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n \r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const initialState = {\r\n    listIsOpenBoolean: true\r\n};\r\n\r\nexport default initialState;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { pokemonsData } from './reducers/pokemonsData';\r\n\r\n\r\nconst store = createStore(\r\n    pokemonsData,\r\n    composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nstore.subscribe(() => console.info('subscribe', store.getState()))\r\n\r\nexport default store;\r\n","import initialState from '../initialState';\r\nimport { \r\n    POKEMONS_FETCH_DATA_SUCCESS, \r\n    POKEMON_FETCH_DATA_SUCCESS, \r\n    POKEMONS_LIST_FETCH_DATA_SUCCESS,\r\n    LIST_IS_OPEN_SUCCESS,\r\n    FETCH_IS_START,\r\n    FETCH_ERROR\r\n} from '../actions/actionsTypes';\r\n\r\nexport function pokemonsData(state = initialState, action) {\r\n    switch(action.type) {\r\n        case POKEMONS_FETCH_DATA_SUCCESS: \r\n        return {\r\n            ...state,\r\n            pokemons: action.pokemons\r\n        };\r\n        case POKEMON_FETCH_DATA_SUCCESS: \r\n        return {\r\n            ...state,\r\n            pokemon: action.pokemon\r\n        };\r\n        case POKEMONS_LIST_FETCH_DATA_SUCCESS: \r\n        return {\r\n            ...state,\r\n            pokemonsList: action.pokemonsList\r\n        };\r\n        case LIST_IS_OPEN_SUCCESS: \r\n        return {\r\n            ...state,\r\n            listIsOpenBoolean: !state.listIsOpenBoolean\r\n        };\r\n        case FETCH_IS_START: \r\n        return {\r\n            ...state,\r\n            isFetchStart: action.isFetchStart \r\n        };\r\n        case FETCH_ERROR: \r\n        return {\r\n            ...state,\r\n            isFetchError: action.isFetchError\r\n        };\r\n        \r\n        default: return state;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from \"react-redux\";\r\nimport store from './store/store';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}